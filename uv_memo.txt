*UV コマンド
uv init: Create a new Python project.
uv add: Add a dependency to the project.
uv remove: Remove a dependency from the project.
uv sync: Sync the project's dependencies with the environment.
uv lock: Create a lockfile for the project's dependencies.
uv run: Run a command in the project environment.
uv tree: View the dependency tree for the project.
uv build: Build the project into distribution archives.
uv publish: Publish the project to a package index.


＊プロジェクトセットアップ
uv init hello-world　
コマンドを打つと下記のようなプロジェクトフォルダが作られる
.
├── .python-version
├── README.md
├── main.py
└── pyproject.toml

uv run main.py　//プログラムを実行するコマンド


In addition to the files created by uv init, 
uv will create a virtual environment and uv.lock file 
in the root of your project the first time you run a project command, 
i.e., uv run, uv sync, or uv lock.
.
├── .venv            //This folder is where uv will install your project's dependencies.
│   ├── bin
│   ├── lib
│   └── pyvenv.cfg
├── .python-version
├── README.md
├── main.py
├── pyproject.toml
└── uv.lock

uv.lock is a cross-platform lockfile that contains exact information about your project's dependencies. 
Unlike the pyproject.toml which is used to specify the broad requirements of your project, 
the lockfile contains the exact resolved versions that are installed in the project environment. 
This file should be checked into version control, 
allowing for consistent and reproducible installations across machines.
uv.lock is a human-readable TOML file but is managed by uv and should not be edited manually.